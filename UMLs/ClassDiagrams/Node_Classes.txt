@startuml
skinparam nodesep 40

class Node {
  - iD: UUID
  - templateID: UUID
  +addComponent(value: NodeComponent): void
  +removeComponent(value: NodeComponent): void 
  +getComponentsCopy(): IEnumerable<NodeComponent>
  +getID(): UUID
  +getTemplateID(): UUID
}

abstract class NodeComponent {
  - iD: UUID
  - name: String
  +getID(): UUID
  + getName(): String
  + setName(value:String): void
}

class NodeReferenceComponent {
  - referencedNodeID: UUID
  +getReferencedNodeID(): UUID
  +setReferencedNodeID(value: UUID): void
}

enum ComponentType {
  NodeReference
}

class NodeTemplate {
  - components: List<NodeComponentTemplate>
  + getComponents(): List<NodeComponentTemplate>
}

class NodeComponentTemplate {
  - type: ComponentType
  + getType(): ComponentType
}

abstract class NodeFactory {
  +create(template: NodeTemplate): Node
}

abstract class NodeComponentFactory {
  +create(template: NodeComponentTemplate): NodeComponent
}

class NodeContainer {
  -iDToNode: Dictionary<UUID, Node>
  +getNode(iD: UUID): Node
  +addNode(value: Node): void
  +removeNode(value: Node): void
  +removeNode(iD: UUID): void
}


Node -right-> NodeComponent 
NodeTemplate -down-> NodeComponentTemplate
NodeComponent <|-down- NodeReferenceComponent
ComponentType <-left- NodeComponentTemplate
NodeFactory -up-> NodeTemplate
NodeFactory -right-> Node
NodeComponentFactory -up-> NodeComponent
NodeComponentFactory -up-> NodeComponentTemplate
NodeContainer -up-> Node
@enduml